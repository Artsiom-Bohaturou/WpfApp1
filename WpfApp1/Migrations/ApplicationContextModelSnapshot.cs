// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WpfApp1.Contexts;

#nullable disable

namespace WpfApp1.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("WpfApp1.Models.Blueprint", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Link")
                        .HasColumnType("longtext");

                    b.Property<string>("Slide")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Blueprints");
                });

            modelBuilder.Entity("WpfApp1.Models.Build", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Link")
                        .HasColumnType("longtext");

                    b.Property<string>("Slide")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Builds");
                });

            modelBuilder.Entity("WpfApp1.Models.Model", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Link")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<string>("ShortName")
                        .HasColumnType("longtext");

                    b.Property<string>("Slide")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Models");
                });

            modelBuilder.Entity("WpfApp1.Models.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Position")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("WpfApp1.Models.ProjectElement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BlueprintId")
                        .HasColumnType("int");

                    b.Property<int>("BuildId")
                        .HasColumnType("int");

                    b.Property<bool>("IsEditable")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("ModelId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Position")
                        .HasColumnType("int");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("BlueprintId")
                        .IsUnique();

                    b.HasIndex("BuildId")
                        .IsUnique();

                    b.HasIndex("ModelId")
                        .IsUnique();

                    b.HasIndex("ProjectId");

                    b.ToTable("ProjectElements");
                });

            modelBuilder.Entity("WpfApp1.Models.ProjectElement", b =>
                {
                    b.HasOne("WpfApp1.Models.Blueprint", "Blueprint")
                        .WithOne("ProjectElement")
                        .HasForeignKey("WpfApp1.Models.ProjectElement", "BlueprintId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WpfApp1.Models.Build", "Build")
                        .WithOne("ProjectElement")
                        .HasForeignKey("WpfApp1.Models.ProjectElement", "BuildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WpfApp1.Models.Model", "Model")
                        .WithOne("ProjectElement")
                        .HasForeignKey("WpfApp1.Models.ProjectElement", "ModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WpfApp1.Models.Project", "Project")
                        .WithMany("Elements")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Blueprint");

                    b.Navigation("Build");

                    b.Navigation("Model");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("WpfApp1.Models.Blueprint", b =>
                {
                    b.Navigation("ProjectElement")
                        .IsRequired();
                });

            modelBuilder.Entity("WpfApp1.Models.Build", b =>
                {
                    b.Navigation("ProjectElement")
                        .IsRequired();
                });

            modelBuilder.Entity("WpfApp1.Models.Model", b =>
                {
                    b.Navigation("ProjectElement")
                        .IsRequired();
                });

            modelBuilder.Entity("WpfApp1.Models.Project", b =>
                {
                    b.Navigation("Elements");
                });
#pragma warning restore 612, 618
        }
    }
}
